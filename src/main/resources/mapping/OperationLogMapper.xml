<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.OperationLogMapper">
  <resultMap id="BaseResultMap" type="model.OperationLog">
    <id column="operation_log_id" jdbcType="INTEGER" property="operationLogId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="longin_ip" jdbcType="VARCHAR" property="longinIp" />
    <result column="operation_time" jdbcType="BIGINT" property="operationTime" />
    <result column="operation_action" jdbcType="VARCHAR" property="operationAction" />
    <result column="operation_result" jdbcType="TINYINT" property="operationResult" />
    <result column="log_describe" jdbcType="VARCHAR" property="logDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    operation_log_id, user_name, longin_ip, operation_time, operation_action, operation_result, 
    log_describe
  </sql>
  <select id="selectByExample" parameterType="model.OperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_log
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.OperationLogExample">
    delete from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.OperationLog">
    insert into operation_log (operation_log_id, user_name, longin_ip, 
      operation_time, operation_action, operation_result, 
      log_describe)
    values (#{operationLogId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{longinIp,jdbcType=VARCHAR}, 
      #{operationTime,jdbcType=BIGINT}, #{operationAction,jdbcType=VARCHAR}, #{operationResult,jdbcType=TINYINT}, 
      #{logDescribe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.OperationLog">
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operationLogId != null">
        operation_log_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="longinIp != null">
        longin_ip,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="operationAction != null">
        operation_action,
      </if>
      <if test="operationResult != null">
        operation_result,
      </if>
      <if test="logDescribe != null">
        log_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operationLogId != null">
        #{operationLogId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="longinIp != null">
        #{longinIp,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=BIGINT},
      </if>
      <if test="operationAction != null">
        #{operationAction,jdbcType=VARCHAR},
      </if>
      <if test="operationResult != null">
        #{operationResult,jdbcType=TINYINT},
      </if>
      <if test="logDescribe != null">
        #{logDescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.OperationLogExample" resultType="java.lang.Integer">
    select count(*) from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_log
    <set>
      <if test="record.operationLogId != null">
        operation_log_id = #{record.operationLogId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.longinIp != null">
        longin_ip = #{record.longinIp,jdbcType=VARCHAR},
      </if>
      <if test="record.operationTime != null">
        operation_time = #{record.operationTime,jdbcType=BIGINT},
      </if>
      <if test="record.operationAction != null">
        operation_action = #{record.operationAction,jdbcType=VARCHAR},
      </if>
      <if test="record.operationResult != null">
        operation_result = #{record.operationResult,jdbcType=TINYINT},
      </if>
      <if test="record.logDescribe != null">
        log_describe = #{record.logDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_log
    set operation_log_id = #{record.operationLogId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      longin_ip = #{record.longinIp,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=BIGINT},
      operation_action = #{record.operationAction,jdbcType=VARCHAR},
      operation_result = #{record.operationResult,jdbcType=TINYINT},
      log_describe = #{record.logDescribe,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.OperationLog">
    update operation_log
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="longinIp != null">
        longin_ip = #{longinIp,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=BIGINT},
      </if>
      <if test="operationAction != null">
        operation_action = #{operationAction,jdbcType=VARCHAR},
      </if>
      <if test="operationResult != null">
        operation_result = #{operationResult,jdbcType=TINYINT},
      </if>
      <if test="logDescribe != null">
        log_describe = #{logDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.OperationLog">
    update operation_log
    set user_name = #{userName,jdbcType=VARCHAR},
      longin_ip = #{longinIp,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=BIGINT},
      operation_action = #{operationAction,jdbcType=VARCHAR},
      operation_result = #{operationResult,jdbcType=TINYINT},
      log_describe = #{logDescribe,jdbcType=VARCHAR}
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="model.OperationLog">
    <id column="operation_log_id" jdbcType="INTEGER" property="operationLogId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="longin_ip" jdbcType="VARCHAR" property="longinIp" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="operation_action" jdbcType="VARCHAR" property="operationAction" />
    <result column="operation_result" jdbcType="TINYINT" property="operationResult" />
    <result column="log_describe" jdbcType="VARCHAR" property="logDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    operation_log_id, user_name, longin_ip, operation_time, operation_action, operation_result, 
    log_describe
  </sql>
  <select id="selectByExample" parameterType="model.OperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_log
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.OperationLogExample">
    delete from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.OperationLog">
    insert into operation_log (operation_log_id, user_name, longin_ip, 
      operation_time, operation_action, operation_result, 
      log_describe)
    values (#{operationLogId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{longinIp,jdbcType=VARCHAR}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{operationAction,jdbcType=VARCHAR}, #{operationResult,jdbcType=TINYINT}, 
      #{logDescribe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.OperationLog">
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operationLogId != null">
        operation_log_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="longinIp != null">
        longin_ip,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="operationAction != null">
        operation_action,
      </if>
      <if test="operationResult != null">
        operation_result,
      </if>
      <if test="logDescribe != null">
        log_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operationLogId != null">
        #{operationLogId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="longinIp != null">
        #{longinIp,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationAction != null">
        #{operationAction,jdbcType=VARCHAR},
      </if>
      <if test="operationResult != null">
        #{operationResult,jdbcType=TINYINT},
      </if>
      <if test="logDescribe != null">
        #{logDescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.OperationLogExample" resultType="java.lang.Integer">
    select count(*) from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_log
    <set>
      <if test="record.operationLogId != null">
        operation_log_id = #{record.operationLogId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.longinIp != null">
        longin_ip = #{record.longinIp,jdbcType=VARCHAR},
      </if>
      <if test="record.operationTime != null">
        operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operationAction != null">
        operation_action = #{record.operationAction,jdbcType=VARCHAR},
      </if>
      <if test="record.operationResult != null">
        operation_result = #{record.operationResult,jdbcType=TINYINT},
      </if>
      <if test="record.logDescribe != null">
        log_describe = #{record.logDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_log
    set operation_log_id = #{record.operationLogId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      longin_ip = #{record.longinIp,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      operation_action = #{record.operationAction,jdbcType=VARCHAR},
      operation_result = #{record.operationResult,jdbcType=TINYINT},
      log_describe = #{record.logDescribe,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.OperationLog">
    update operation_log
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="longinIp != null">
        longin_ip = #{longinIp,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationAction != null">
        operation_action = #{operationAction,jdbcType=VARCHAR},
      </if>
      <if test="operationResult != null">
        operation_result = #{operationResult,jdbcType=TINYINT},
      </if>
      <if test="logDescribe != null">
        log_describe = #{logDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.OperationLog">
    update operation_log
    set user_name = #{userName,jdbcType=VARCHAR},
      longin_ip = #{longinIp,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      operation_action = #{operationAction,jdbcType=VARCHAR},
      operation_result = #{operationResult,jdbcType=TINYINT},
      log_describe = #{logDescribe,jdbcType=VARCHAR}
    where operation_log_id = #{operationLogId,jdbcType=INTEGER}
  </update>
</mapper>